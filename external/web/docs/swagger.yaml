basePath: /v2
definitions:
  patient.NewPatientInputDto:
    properties:
      cpf:
        type: string
      email:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
  patient.Patient:
    properties:
      cpf:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
  patient.PatientOutputDto:
    properties:
      cpf:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
  responsibility.PatientWithRelationship:
    properties:
      patient:
        $ref: '#/definitions/patient.Patient'
      relationshipType:
        type: string
      userId:
        type: string
    type: object
  responsibility.UserWithRelationship:
    properties:
      patientId:
        type: string
      relationshipType:
        type: string
      user:
        $ref: '#/definitions/user.User'
    type: object
  user.CreateUserInputDto:
    properties:
      email:
        type: string
      origin:
        type: string
      password:
        type: string
      role:
        type: string
    type: object
  user.Permission:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  user.Role:
    properties:
      name:
        type: string
      permissions:
        items:
          $ref: '#/definitions/user.Permission'
        type: array
    type: object
  user.User:
    properties:
      email:
        type: string
      id:
        type: string
      origin:
        type: string
      password:
        type: string
      role:
        $ref: '#/definitions/user.Role'
    type: object
  user.UserOutputDto:
    properties:
      email:
        type: string
      id:
        type: string
      role:
        type: string
    type: object
host: http://localhost:3000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample Neofarma server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /admin/create:
    post:
      consumes:
      - application/json
      description: Cria um novo usuário com os dados fornecidos e retorna os detalhes
        do usuário, incluindo um cookie de autenticação.
      parameters:
      - description: Dados do novo usuário
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/user.CreateUserInputDto'
      produces:
      - application/json
      responses:
        "200":
          description: Usuário criado com sucesso
          schema:
            $ref: '#/definitions/user.UserOutputDto'
        "400":
          description: Erro de validação dos dados
          schema:
            type: string
        "500":
          description: Erro interno do servidor
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Cria um novo usuário
      tags:
      - Auth
  /patients/{id}:
    get:
      consumes:
      - application/json
      description: Devolve os usuário que tem relação com o paciente informado
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Dados do paciente
          schema:
            $ref: '#/definitions/patient.PatientOutputDto'
        "500":
          description: Erro interno do servidor
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Lista os usuários com relação ao paciente
      tags:
      - Relationship
  /patients/{id}/users/relationships:
    get:
      consumes:
      - application/json
      description: Devolve os usuário que tem relação com o paciente informado
      parameters:
      - description: patient id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Usuários com relação com o paciente informado
          schema:
            items:
              $ref: '#/definitions/responsibility.UserWithRelationship'
            type: array
        "500":
          description: Erro interno do servidor
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Lista os usuários com relação ao paciente
      tags:
      - Relationship
  /patients/save:
    post:
      consumes:
      - application/json
      description: Recebe os dados de um novo paciente e os salva no sistema.
      parameters:
      - description: Dados do paciente
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/patient.NewPatientInputDto'
      produces:
      - application/json
      responses:
        "200":
          description: Paciente salvo com sucesso
          schema:
            $ref: '#/definitions/patient.PatientOutputDto'
        "400":
          description: Erro de validação dos dados
          schema:
            type: string
        "500":
          description: Erro interno do servidor
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Salva um novo paciente
      tags:
      - Patients
  /relationships/remove:
    post:
      consumes:
      - application/json
      description: Recebe os dados de paciente, usuário e tipo de relação
      parameters:
      - description: user id
        in: body
        name: userId
        required: true
        schema:
          type: string
      - description: patient id
        in: body
        name: patientId
        required: true
        schema:
          type: string
      - description: relationship type
        in: body
        name: bond
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Relação removida com sucesso
          schema:
            type: string
        "400":
          description: Erro de validação dos dados
          schema:
            type: string
        "500":
          description: Erro interno do servidor
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Remove relação entre usuário e paciente
      tags:
      - Relationship
  /relationships/save:
    post:
      consumes:
      - application/json
      description: Recebe os dados de paciente, usuário e tipo de relação
      parameters:
      - description: user id
        in: body
        name: userId
        required: true
        schema:
          type: string
      - description: patient id
        in: body
        name: patientId
        required: true
        schema:
          type: string
      - description: relationship type
        in: body
        name: bond
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: relação criada com sucesso
          schema:
            type: string
        "400":
          description: Erro de validação dos dados
          schema:
            type: string
        "500":
          description: Erro interno do servidor
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Criar uma relação entre usuário e paciente
      tags:
      - Relationship
  /users/{id}/patients/relationships:
    get:
      consumes:
      - application/json
      description: Devolve os usuário que tem relação com o paciente informado
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Pacientes com relação com o usuário informado
          schema:
            items:
              $ref: '#/definitions/responsibility.PatientWithRelationship'
            type: array
        "500":
          description: Erro interno do servidor
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Lista os usuários com relação ao paciente
      tags:
      - Relationship
  /users/signin:
    post:
      consumes:
      - application/json
      description: Autentica um usuário com email e senha fornecidos e retorna um
        cookie para manter a sessão do usuário.
      parameters:
      - description: user email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: user password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Autenticação bem-sucedida
          schema:
            type: string
        "400":
          description: Erro de validação dos dados
          schema:
            type: string
        "500":
          description: Erro interno do servidor
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Autentica um usuário e retorna um cookie de autenticação
      tags:
      - User
  /users/signout:
    post:
      consumes:
      - application/json
      description: Remove o cookie de autenticação do usuário, invalidando a sessão.
      produces:
      - application/json
      responses:
        "200":
          description: Desconexão bem-sucedida
          schema:
            type: string
        "500":
          description: Erro interno do servidor
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Desconecta o usuário removendo o cookie de autenticação
      tags:
      - Auth
swagger: "2.0"
